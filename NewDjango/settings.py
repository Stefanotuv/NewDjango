"""
Django settings for NewDjango project.

Generated by 'django-admin startproject' using Django 2.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import rest_framework
# import rest_framework_jwt

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
STATIC_DIR = os.path.join(BASE_DIR,'STATIC_DIR')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'nn7s&29w3%ur_kbz$v6(h^@r668k(m&o!($mm=s-dfka6nsv=^'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.urls',
    'test_app',
    'blog.apps.BlogConfig',
    'users.apps.UsersConfig',
    'crispy_forms', # template to improve forms rendering
    'grouping.apps.GroupingConfig',
    'rest_framework',
    'gproject.apps.GprojectConfig',
    'api.apps.ApiConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
    ),
}

ROOT_URLCONF = 'NewDjango.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'NewDjango.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)

MEDIA_ROOT = os.path.join(BASE_DIR,'media')

MEDIA_URL = '/media/'

CRISPY_TEMPLATE_PACK='bootstrap4' # use bootstrap4 as template pack for the forms

LOGIN_REDIRECT_URL = 'gproject-home'

LOGIN_URL = 'users-login'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
# EMAIL_HOST_USER = os.environ.get('EMAIL_USER')
# EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_PASS')

EMAIL_HOST_USER = 'test.for.stefano@gmail.com'
EMAIL_HOST_PASSWORD = 'iorpigeavuogujap'

GROUPING_COLUMNS = [ 'LBSNo' ,
                     'Stream' ,
                     'Group' ,
                     'First Name' ,
                     'Known Name' ,
                     'Surname' ,
                     'Nationality' ,
                     'Nationality Region' ,
                     'Gender' ,
                     'Age' ,
                     'Relevant Experience' ,
                     'Country of Residence' ,
                     'CoR Region' ,
                     'GMAT Score(total)' ,
                     'Quant' ,
                     'English Mother Tongue' ,
                     'English Scores' ,
                     'Job Title' ,
                     'Company Name' ,
                     'City (Employment)' ,
                     'Country(Employment)' ,
                     'Professional Category (PO team)' ,
                     'Job Function' ,
                     'Email Address' ,
                     'School Email' ,
                     'Q Score' ,
                     'Q Score %' ,
                     'V Score' ,
                     'V Score %' ,
                     'AW Score' ,
                     'AW Score  %' ,
                     'IR Score' ,
                     'IR Score  %' ,
                     'Second Nationality' ,
                     'Home City' ,
                     'Microeconomics Waiver' ,
                     'Macroeconomics Waiver' ,
                    'DAM Waiver' ,
                    'Visa at risk']

